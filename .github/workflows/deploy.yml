name: Deploy Next.js to AWS

on:
  push:
    branches:
      - production

  pull_request:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
        matrix:
          env: 
            - name: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set NODE_ENV for Production
        run: |
          echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Check NODE_ENV
        run: echo "Current NODE_ENV is $NODE_ENV"
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.EC2_REGION }}

      - name: Log in to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: List files
        run: ls -a | pwd

      - name: SSH to EC2 and deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          ACCOUNT_ID: ${{ secrets.EC2_ACC_ID }}
          REGION: ${{ secrets.EC2_REGION }}
          REPOSITORY: ${{ secrets.EC2_REPO }}
          NODE_ENV: ${{ env.NODE_ENV }}
        run: |
          echo "${EC2_SSH_KEY}" > ec2_key.pem
          chmod 600 ec2_key.pem
      
          echo Copiando os arquivos do caminho correto
          scp -i ec2_key.pem -o StrictHostKeyChecking=no -r /home/runner/work/churchesAppWeb/churchesAppWeb/* "${EC2_USER}"@"${EC2_HOST}":/home/ubuntu/churches_app_web/
          
          echo "Verificando arquivos no diretório /home/ubuntu/churches_app_web/"
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no "${EC2_USER}"@"${EC2_HOST}" "ls -la /home/ubuntu/churches_app_web/"
      
          echo Navegando para o diretório correto e subindo os contêineres
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no "${EC2_USER}"@"${EC2_HOST}" << EOF
            cd /home/ubuntu/churches_app_web/
            pwd
            
            echo Verificar versão do Docker Compose
            echo "Verificando versão do Docker Compose..."
            docker-compose --version
      
            aws --version || { echo "AWS CLI não está instalada."; exit 1; }
      
            echo "Account ID: ${ACCOUNT_ID}"
            echo "Region: ${REGION}"
      
            # Logar no ECR
            aws ecr get-login-password --region "${REGION}" | docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com"
      
            echo "Puxando a imagem: ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPOSITORY}:latest"
            docker pull ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPOSITORY}:latest
      
            echo "Subindo os contêineres com Docker Compose..."
            docker-compose up --build -d  # Cria e inicia os contêineres em segundo plano
      
            echo "Verificando status dos contêineres..."
            docker-compose ps
          EOF

