name: Deploy Next.js to AWS

on:
  push:
    branches:
      - production

  pull_request:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.EC2_REGION }}

      - name: Log in to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          ACCOUNT_ID=${{ secrets.EC2_ACC_ID }}
          REGION=${{ secrets.EC2_REGION }}
          REPOSITORY=${{ secrets.EC2_REPO }}
          IMAGE_TAG=latest
          
          # Construir a imagem Docker
          docker build -t $REPOSITORY .

          # Tag a imagem para o ECR
          docker tag $REPOSITORY:latest $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPOSITORY:$IMAGE_TAG

          # Push a imagem para o ECR
          docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPOSITORY:$IMAGE_TAG

      - name: SSH to EC2 and deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_SSH_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST 'docker pull $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/my-nextjs-app:latest && docker-compose up -d'
